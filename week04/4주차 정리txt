변수는 메인 메모리에 만들어진다. 

변수(variable)
    사용자에게서 받는 데이터를 저장하는 장소


자료형(data tyoe)
    데이터의 타입(종류)
    short, int,long: 정수형 데이터(100) - short: 2바이트, long: 4바이트
    double, float: 부동 소수점형 데이터(3.141592) - double: 8바이트, float: 4바이트
    char: 문자형 데이터('A','a','한') - 1바이트 사용
    long long: 8바이트 

    자료형의 분류
    자료형을 크게 나누면 정수형(integer type), 실수형(float type), 문자형(char type)

    자료형의 크기
    자료형의 크기를 알아보려면 sizeof 연산자를 사용하면 된다. sizeof는 변수나 자료형의 크기를 바이트 단위로 반환하는 연산자이다.

    많은 종류의 정수형이 존재하는 이유
    용도에따라 프로그래머가 선택하여 사용할 수 있게 하기 위함
    비트수를 늘려 정수의 범위는 확대시킬 수 있지만 메모리 공간의 낭비가 심해지기 때문이다.



오버플로우(overflow)



정수 상수
    숫자를 적으면 기본적으로 int 형이 된다
    sum= 123

    상수의 자료형을 명시하려면 다음과 같이 한다.
    sum= 123L; // 123은 long형
    



10진법, 8진법, 16진법



기호 상수(symbolic constant)
    기호를 이용해서 상수를 표현한 것

    ex) 
    won= 1120 * dollar; (1) 실제 값을 사용
    won= EXCHANGE_RATE * dollar (2) 기호 상수 사용

    장점 
    1)가독성이 높아진다 
    2)값을 쉽게 변경할 수 있다.

    만드는 방법 
    1) 전처리기 #define EXCHANG_RATE 1120
    2) 필드에 생성 const int EXCHANG_RATE= 1120;

    변수 vs 기호상수
    변수는 초기값 주고 변경 가능
    기호상수는 변경 불가능. 초기값 그대로 사용

정수 표현 방법
    양수: 십진수를 이진수로 변환하여 저장하면 된다.

    음수: 보통은 첫번째 비트를 부호 비트로 사용한다. 문제점이 발생한다.

     3: 0000 0011
    -3: 1111 1100 -> 1의보수
               +1
        ---------
        1111 1101 -> 2의보수 

        0000 0011
    +   1111 1101 
        ---------
        0000 0000
                



    

